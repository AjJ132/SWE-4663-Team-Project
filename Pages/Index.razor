@page "/"
@inherits IndexBase
@namespace TeamProject.Pages
@inject DialogService DialogService
@using TeamProject.Data

<PageTitle>Home</PageTitle>

@if (!this.IsLoaded)
{
    <p><em>Loading</em></p>
}
else
{
    @if (this.ErrorOccured)
    {
        <p>There was an error in loading the database</p>
        <p>Please press retry.</p>
        <RadzenButton Text="Retry" ButtonStyle="ButtonStyle.Primary" Size="ButtonSize.Large"></RadzenButton>
    }
    else
    {
        <RadzenStack>
    <RadzenStack>
        <RadzenStack AlignItems="AlignItems.Start" Gap="5px;">
            <h1 style="margin-block-end: 0;">Project Tracking</h1>
            <h4 style="margin-block-end: 0; ">@DateTime.Today.Date.ToString("ddd MMM yyyy")</h4>
        </RadzenStack>
        <RadzenStack Orientation="Orientation.Horizontal">

        </RadzenStack>
        <div class="divider" />
    </RadzenStack>
    @*Page's Main Content*@
    <RadzenStack>
        @foreach (var proj in this.Projects)
                {
                    <RadzenCard>
                        <RadzenStack>
                            <h3>@proj.Name</h3>
                            <RadzenStack Orientation="Orientation.Horizontal" Gap="2rem">
                                <h5>Total Requirements: @proj.TotalRequirements</h5>
                                <h5>Percent Complete: @proj.ProjectCompletion%</h5>
                                <h5>High Priority Tasks: @proj.HighPriorityTasks </h5>
                            </RadzenStack>

                            <div>
                                <table>
                                    <thead>
                                        <tr>
                                            <th style="text-align: center;">Task</th>
                                            <th style="text-align: center;">Status</th>
                                            @foreach (var date in proj.ProjectDates)
                                            {
                                                <th>&nbsp;&nbsp;@date.ToShortDateString() &nbsp;&nbsp;</th>

                                            }
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var task in proj.Tasks)
                                        {
                                            <tr>
                                                <td class="table-cell">@task.TaskName</td>
                                                <td class="table-cell">@task.Status</td>
                                                @foreach (var date in task.Dates)
                                                {
                                                    @if (date.Value == true)
                                                    {
                                                        <th class="highlighted" @onclick="((async) => ToggleTaskDate(task, date.Key, proj.Id))">
                                                            @this.Projects.FirstOrDefault(p => p.Id ==
                                                                     proj.Id)?.TeamMembers.FirstOrDefault(t => t.TeamMemberID ==
                                                                     task.UserID)?.TeamMemberName </th>
                                                    }
                                                    else
                                                    {
                                                        <th @onclick="(() => ToggleTaskDate(task, date.Key, proj.Id))"></th>
                                                    }
                                                }
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </RadzenStack>
                    </RadzenCard>
                }
            </RadzenStack>
        </RadzenStack>
    }
}


<style>
    h1 {
        margin-block-end: 0;
        margin-block-start: 0;
        font-weight: 600;
    }



    .divider {
        border-bottom: 3px solid #e0e0e0;
        margin: 10px 0;
    }

    .highlighted {
        background-color: rgb(1, 206, 1) !important;
        text-align: center;
        /* Or any color you prefer */
    }

    .table-cell {
        padding: 10px;
        /* Adjust the value as needed */
    }

    table {
        border-collapse: separate;

        border-spacing: 1px;

    }

    /* Style for odd columns */
    tr>td:nth-child(odd),
    tr>th:nth-child(odd) {
        background-color: #f2f2f2;

        /* Light gray color, change as needed */
    }

    /* Style for even columns */
    tr>td:nth-child(even),
    tr>th:nth-child(even) {
        background-color: #e7e7e7;
        /* Slightly darker gray, change as needed */
    }
</style>