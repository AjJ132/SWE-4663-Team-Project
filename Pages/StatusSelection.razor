@inject DialogService DialogService
@using TeamProject.Data;

<RadzenStack style="width: 100%;" JustifyContent="JustifyContent.Center" AlignItems="AlignItems.Center">
    <RadzenStack Orientation="Orientation.Horizontal">
        <RadzenStack>
            <h3>Status</h3>
            <RadzenDropDown Data="@StatusOptions" @bind-Value="@requirementStatus" />

        </RadzenStack>

    </RadzenStack>

    <RadzenStack Orientation=" Orientation.Horizontal">
        <RadzenButton Text="Exit" Click="@CloseDialog" />
        <RadzenButton Text="Confirm" Click="@ConfirmSelection" />
    </RadzenStack>
</RadzenStack>




@code {

    [Parameter]
    public string Status { get; set; } = "Open";



    private RequirementStatus requirementStatus = RequirementStatus.Proposed;

    @* private List<RequirementStatus> StatusOptions = Enum.GetValues(typeof(RequirementStatus))
.Cast<RequirementStatus>()
.ToList(); *@

    IEnumerable<RequirementStatus> StatusOptions = Enum.GetValues(typeof(RequirementStatus)).Cast<RequirementStatus>();

    @* IEnumerable<ColorScheme> colorSchemes = Enum.GetValues(typeof(ColorScheme)).Cast<ColorScheme>(); *@


    void CloseDialog()
    {
        DialogService.Close(false);
    }

    void ConfirmSelection()
    {
        DialogService.Close(requirementStatus);
    }
}